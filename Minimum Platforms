/*package whatever //do not write package name here */

import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
    
    private static int solve(int[] arrival, int[] depart, int n) {
        int[] dp = new int[2361];
        
        for(int i = 0; i < n; i++) {
            dp[arrival[i]]++;
            dp[depart[i] + 1]--;
        }
        
        int ans = dp[0];
        for(int i = 1; i < dp.length; i++) {
            dp[i] += dp[i - 1];
            ans = Math.max(ans, dp[i]);
        }
        return ans;
    }
    
    // private static int sol(int[] arrival, int[] depart, int n) {
    //     int ans = 0;
        
    //     // Arrays.sort(arrival);
    //     // Arrays.sort(depart);
        
    //     int curr = 0, i = 0, j = 0;
    //     while(i < n && j < n) {
    //         if(arrival[i] <= depart[j]) {
    //             curr++;
    //             i++;
    //         }
    //         else {
    //             curr--;
    //             j++;
    //         }
            
    //         // System.out.println("here");
            
    //         ans = Math.max(ans, curr);
    //     }
    //     return ans;
        
    // }
    
	public static void main (String[] args) {
		//code
		Scanner scn = new Scanner(System.in);
		int t = scn.nextInt();
		while (t-- > 0) {
		    int n = scn.nextInt();
		    int[] arrival = new int[n];
		    int[] depart = new int[n];
		    
		    for(int i = 0; i < n; i++) arrival[i] = scn.nextInt();
		    for(int i = 0; i < n; i++) depart[i] = scn.nextInt();
		    
		    System.out.println(solve(arrival, depart, n));
		}
	}
}
